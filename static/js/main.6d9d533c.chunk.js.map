{"version":3,"sources":["api/api.ts","constants/constants.ts","components/Todo/Todo.tsx","components/TodoList/TodoList.tsx","App.tsx","utils/utils.ts","index.tsx"],"names":["getData","url","fetch","then","response","json","getPreparedTodos","a","todos","users","preparedTodos","map","todo","user","find","id","userId","Todo","title","completed","className","name","TodoList","key","App","useState","setTodos","isLoading","setIsLoading","clickHandler","event","sortedTodos","sortBy","sort","todoA","todoB","localeCompare","sortTodos","currentTarget","length","type","onClick","disabled","todosWithUsers","finally","ReactDOM","render","document","getElementById"],"mappings":"kRAEaA,EAAU,SAAIC,GACzB,OAAOC,MAAMD,GACVE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,WAWlBC,EAAgB,uCAAG,gCAAAC,EAAA,sEAHvBP,ECXgB,8CDcO,cACxBQ,EADwB,gBAPvBR,ECRgB,8CDeO,cAExBS,EAFwB,OAIxBC,EAAgBF,EAAMG,KAAI,SAAAC,GAAI,sBAC/BA,EAD+B,CAElCC,KAAMJ,EAAMK,MAAK,SAAAD,GAAI,OAAIA,EAAKE,KAAOH,EAAKI,eANd,kBASvBN,GATuB,2CAAH,qDEThBO,EAAwB,SAAC,GAAc,IAAZL,EAAW,EAAXA,KAEpCG,EAIEH,EAJFG,GACAF,EAGED,EAHFC,KACAK,EAEEN,EAFFM,MACAC,EACEP,EADFO,UAGF,OACE,wBAAIC,UAAU,cACZ,wBAAIA,UAAU,eAAeL,GAC7B,wBAAIK,UAAU,eAAeP,EAAKQ,MAClC,wBAAID,UAAU,eAAeF,GAC7B,wBAAIE,UAAU,eAAd,UAAgCD,MCXzBG,G,MAA4B,SAAC,GAAe,IAAbd,EAAY,EAAZA,MAC1C,OACE,2BAAOY,UAAU,SACf,+BACE,wBAAIA,UAAU,+BACZ,wBAAIA,UAAU,eAAd,KACA,wBAAIA,UAAU,eAAd,QACA,wBAAIA,UAAU,eAAd,SACA,wBAAIA,UAAU,eAAd,YAGJ,+BACGZ,EAAMG,KAAI,SAAAC,GAAI,OACb,kBAAC,EAAD,CAAMW,IAAKX,EAAKG,GAAIH,KAAMA,WC2DrBY,G,MA1EC,WAAO,IAAD,EACMC,mBAAyB,IAD/B,mBACbjB,EADa,KACNkB,EADM,OAEcD,oBAAS,GAFvB,mBAEbE,EAFa,KAEFC,EAFE,KAcdC,EAAe,SAACC,GACpB,IAAMC,ECrBe,SAACvB,EAAuBwB,GAC/C,OAAQA,GACN,IAAK,OACH,OAAOxB,EAAMyB,MAAK,SAACC,EAAOC,GAAR,OAChBD,EAAMrB,KAAKQ,KAAKe,cAAcD,EAAMtB,KAAKQ,SAK7C,IAAK,QACH,OAAOb,EAAMyB,MAAK,SAACC,EAAOC,GAAR,OAChBD,EAAMhB,MAAMkB,cAAcD,EAAMjB,UAKpC,IAAK,YACH,OAAOV,EAAMyB,MAAK,SAACC,EAAOC,GAAR,OAAoBD,EAAMf,WAAagB,EAAMhB,aAIjE,QAAS,OAAOX,GDAI6B,CAAU,YAAI7B,GAAQsB,EAAMQ,cAAcjB,MAE9DK,EAASK,IAGX,OAAKvB,EAAM+B,OAiBT,yBAAKnB,UAAU,OACb,qDACA,2BACE,yCACCZ,EAAM+B,QAET,yBAAKnB,UAAU,qBACb,4BACEA,UAAU,SACVC,KAAK,QACLmB,KAAK,SACLC,QAASZ,GAJX,iBAQA,4BACET,UAAU,SACVC,KAAK,OACLmB,KAAK,SACLC,QAASZ,GAJX,gBAQA,4BACET,UAAU,SACVC,KAAK,YACLmB,KAAK,SACLC,QAASZ,GAJX,sBASF,kBAAC,EAAD,CAAUrB,MAAOA,KA/CjB,yBAAKY,UAAU,oBACb,qDACA,4BACEA,UAAU,SACVoB,KAAK,SACLE,SAAUf,EACVc,QAxBY,WAClBb,GAAa,GAEbtB,IAAmBH,MAAK,SAAAwC,GACtBjB,EAASiB,MACRC,SAAQ,WACThB,GAAa,QAoBRD,EAAY,aAAe,iBEhCtCkB,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.6d9d533c.chunk.js","sourcesContent":["import { USERS_URL, TODOS_URL } from '../constants/constants';\n\nexport const getData = <T>(url: string): Promise<T> => {\n  return fetch(url)\n    .then(response => response.json());\n};\n\nconst getUsers = (usersUrl: string): Promise<User[]> => {\n  return getData(usersUrl);\n};\n\nconst getTodos = (todosUrl: string): Promise<Todo[]> => {\n  return getData(todosUrl);\n};\n\nexport const getPreparedTodos = async (): Promise<TodoWithUser[]> => {\n  const todos = await getTodos(TODOS_URL);\n  const users = await getUsers(USERS_URL);\n\n  const preparedTodos = todos.map(todo => ({\n    ...todo,\n    user: users.find(user => user.id === todo.userId) as User,\n  }));\n\n  return preparedTodos;\n};\n","export const USERS_URL = 'https://jsonplaceholder.typicode.com/users';\nexport const TODOS_URL = 'https://jsonplaceholder.typicode.com/todos';\n","import React from 'react';\n\ninterface Props {\n  todo: TodoWithUser;\n}\n\nexport const Todo: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    user,\n    title,\n    completed,\n  } = todo;\n\n  return (\n    <tr className=\"table__row\">\n      <td className=\"table__cell\">{id}</td>\n      <td className=\"table__cell\">{user.name}</td>\n      <td className=\"table__cell\">{title}</td>\n      <td className=\"table__cell\">{`${completed}`}</td>\n    </tr>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../Todo/Todo';\nimport './TodoList.css';\n\ninterface Props {\n  todos: TodoWithUser[];\n}\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <table className=\"table\">\n      <thead>\n        <tr className=\"table__row table__row_thead\">\n          <th className=\"table__cell\">#</th>\n          <th className=\"table__cell\">Name</th>\n          <th className=\"table__cell\">Title</th>\n          <th className=\"table__cell\">Status</th>\n        </tr>\n      </thead>\n      <tbody>\n        {todos.map(todo => (\n          <Todo key={todo.id} todo={todo} />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import React, { FC, useState, MouseEvent } from 'react';\nimport { getPreparedTodos } from './api/api';\nimport { TodoList } from './components/TodoList/TodoList';\nimport { sortTodos } from './utils/utils';\nimport './App.css';\n\nconst App: FC = () => {\n  const [todos, setTodos] = useState<TodoWithUser[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const loadHandler = () => {\n    setIsLoading(true);\n\n    getPreparedTodos().then(todosWithUsers => {\n      setTodos(todosWithUsers);\n    }).finally(() => {\n      setIsLoading(false);\n    });\n  };\n\n  const clickHandler = (event: MouseEvent<HTMLButtonElement>) => {\n    const sortedTodos = sortTodos([...todos], event.currentTarget.name);\n\n    setTodos(sortedTodos);\n  };\n\n  if (!todos.length) {\n    return (\n      <div className=\"button-container\">\n        <h1>Dynamic list of TODOs</h1>\n        <button\n          className=\"button\"\n          type=\"button\"\n          disabled={isLoading}\n          onClick={loadHandler}\n        >\n          {isLoading ? 'Loading...' : 'Load Todos'}\n        </button>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Dynamic list of TODOs</h1>\n      <p>\n        <span>Todos: </span>\n        {todos.length}\n      </p>\n      <div className=\"buttons-container\">\n        <button\n          className=\"button\"\n          name=\"title\"\n          type=\"button\"\n          onClick={clickHandler}\n        >\n          Sort by title\n        </button>\n        <button\n          className=\"button\"\n          name=\"name\"\n          type=\"button\"\n          onClick={clickHandler}\n        >\n          Sort by name\n        </button>\n        <button\n          className=\"button\"\n          name=\"completed\"\n          type=\"button\"\n          onClick={clickHandler}\n        >\n          Sort by completed\n        </button>\n      </div>\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n\nexport default App;\n","export const sortTodos = (todos: TodoWithUser[], sortBy: string): TodoWithUser[] => {\n  switch (sortBy) {\n    case 'name': {\n      return todos.sort((todoA, todoB) => (\n        todoA.user.name.localeCompare(todoB.user.name)\n      ));\n      break;\n    }\n\n    case 'title': {\n      return todos.sort((todoA, todoB) => (\n        todoA.title.localeCompare(todoB.title)\n      ));\n      break;\n    }\n\n    case 'completed': {\n      return todos.sort((todoA, todoB) => (+todoA.completed - +todoB.completed));\n      break;\n    }\n\n    default: return todos;\n  }\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}